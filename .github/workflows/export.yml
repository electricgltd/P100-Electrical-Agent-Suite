name: Export Dataverse Solution (Nightly, DEV)

on:
  schedule:
    - cron: "0 2 * * *" # 02:00 UTC daily
  workflow_dispatch: {} # Allow manual runs

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: export-dev-designandcosting
  cancel-in-progress: false

jobs:
  export-solution:
    runs-on: ubuntu-latest
    env:
      DEV_URL: ${{ secrets.PP_DEV_URL }}
      TEST_URL: ${{ secrets.PP_TEST_URL }}
      # set to 'true' to allow PP_DEV_URL and PP_TEST_URL to be identical (single-environment setups)
      PP_ALLOW_SAME_ENV: ${{ secrets.PP_ALLOW_SAME_ENV }}
      SOLUTION_NAME: DesignAndCosting

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # ✅ Install PAC (Power Platform CLI) for GitHub Actions
      - name: Install Power Platform Tools
        uses: microsoft/powerplatform-actions/actions-install@v1

      # Safety: confirm we're using DEV, not TEST
      - name: Sanity check (Dev vs Test)
        run: |
          echo "Target environment (DEV): $DEV_URL"
          if [ -z "$DEV_URL" ]; then
            echo "PP_DEV_URL is empty. Failing."; exit 1
          fi
          if [ -n "$TEST_URL" ] && [ "$DEV_URL" = "$TEST_URL" ]; then
            if [ "${PP_ALLOW_SAME_ENV}" = "true" ]; then
              echo "PP_DEV_URL and PP_TEST_URL are identical but PP_ALLOW_SAME_ENV=true; continuing for single-environment setup."
            else
              echo "PP_DEV_URL and PP_TEST_URL are identical. Failing to avoid cross-env confusion."; exit 1
            fi
          fi

      - name: Sanity check (reusable)
        uses: ./.github/actions/sanity-check
        with:
          env_url: ${{ secrets.PP_DEV_URL }}
          pp_dev_url: ${{ secrets.PP_DEV_URL }}
          pp_test_url: ${{ secrets.PP_TEST_URL }}
          pp_tenant_id: ${{ secrets.PPAC_TENANT_ID }}
          pp_app_id: ${{ secrets.PPAC_CLIENT_ID }}
          pp_client_secret: ${{ secrets.PPAC_CLIENT_SECRET }}

      # Ensure output folder exists
      - name: Prepare output folder
        run: mkdir -p out

      # ✅ Export from DEV (read-only)
      - name: Export solution (DesignAndCosting) from DEV
        uses: microsoft/powerplatform-actions/export-solution@v1
        with:
          environment-url: ${{ secrets.PP_DEV_URL }}
          app-id: ${{ secrets.PPAC_CLIENT_ID }}
          client-secret: ${{ secrets.PPAC_CLIENT_SECRET }}
          tenant-id: ${{ secrets.PPAC_TENANT_ID }}
          solution-name: DesignAndCosting
          solution-output-file: out/DesignAndCosting.zip
          managed: false

      # Unpack into repo tree
      - name: Unpack solution to solutions/DesignAndCosting
        uses: microsoft/powerplatform-actions/unpack-solution@v1
        with:
          solution-file: out/DesignAndCosting.zip
          solution-folder: solutions/DesignAndCosting
          overwrite-files: true

      # Create PR with any uncommitted changes
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          branch: auto/export-designandcosting-dev
          title: "[DEV] Nightly Export: DesignAndCosting"
          body: |
            Automated export from **DEV** (${{ secrets.PP_DEV_URL }}).
            This PR contains any changes detected after exporting and unpacking the solution.
          commit-message: "chore(sync): nightly export (DEV) - DesignAndCosting"
          add-paths: |
            solutions/DesignAndCosting/**
            out/DesignAndCosting.zip
          delete-branch: true

