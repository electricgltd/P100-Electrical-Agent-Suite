name: PR Guard — Author
on:
  pull_request:
    types: [opened, reopened, edited, synchronize, ready_for_review]
jobs:
  author:
    name: Author
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
    steps:
      - uses: actions/checkout@v4
      - name: Enforce PR author
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            if (!pr) {
              core.setFailed('This workflow only runs on pull_request events.');
              return;
            }
            const allowed = ['electricgltd']; // may be expanded after PR creation
            const author = pr.user?.login || '';
            core.info(`PR #${pr.number} author: ${author}`);
            if (!allowed.includes(author)) {
              core.setFailed(`PR author '${author}' is not allowed. Allowed: ${allowed.join(', ')}`);
            } else {
              core.info('Author check passed.');
            }

      - name: Request reviewer or assign for self-review
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            if (!pr) {
              core.setFailed('This workflow only runs on pull_request events.');
              return;
            }
            // The human account to request / assign. Update if needed.
            const me = 'electricgltd';
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const prNumber = pr.number;
            // If the PR author is the same as the desired reviewer, create a self-review assignment
            if (pr.user?.login === me) {
              core.info(`PR author is ${me} — assigning for self-review and adding label.`);
              try {
                // add assignee (issues API) and add a label to indicate self-review
                await github.rest.issues.addAssignees({ owner, repo, issue_number: prNumber, assignees: [me] });
                await github.rest.issues.addLabels({ owner, repo, issue_number: prNumber, labels: ['self-review'] });
                await github.rest.issues.createComment({ owner, repo, issue_number: prNumber, body: `Assigning @${me} for self-review.` });
              } catch (err) {
                core.warning(`Failed to assign or label PR for self-review: ${err}`);
              }
            } else {
              core.info(`Requesting review from ${me} for PR #${prNumber}`);
              try {
                await github.rest.pulls.requestReviewers({ owner, repo, pull_number: prNumber, reviewers: [me] });
              } catch (err) {
                core.warning(`Failed to request reviewer ${me}: ${err}`);
              }
            }
