name: Agent-assisted Sub-issue
description: Create a sub-issue that can be completed by an automated agent
title: "[Sub-issue] "
labels: ["sub-issue"]
projects: ["electricgltd/2"]
body:
  - type: markdown
    attributes:
      value: |
        ## Agent-assisted Sub-issue
        
        This sub-issue follows the repo's opt-in pattern for agent work. Read the rules below before requesting an agent run.
        
        ### Summary
        - Keep this sub-issue small and single-purpose (one unit of work).
        - Link this sub-issue to its parent issue using the "Linked issues" feature or a reference in the body.
        
        ### Default agent policy
        - By default, agent runs are disabled for sub-issues.
        - To allow an automated agent to act on this sub-issue, a maintainer must:
          - Add the label: `agent: allowed`
          OR
          - Manually trigger the agent workflow (Actions → run workflow).
        
  - type: input
    id: parent-issue
    attributes:
      label: Parent Issue
      description: Link to the parent planning issue
      placeholder: "Closes #123 or Part of #123"
    validations:
      required: true
      
  - type: textarea
    id: task-description
    attributes:
      label: Task Description
      description: Describe the specific task this sub-issue should accomplish
      placeholder: "Single-purpose task description..."
    validations:
      required: true
      
  - type: textarea
    id: scope-files
    attributes:
      label: Scope / Files agent may modify
      description: List allowed paths here (required before agent runs)
      placeholder: |
        - src/components/foo/
        - tests/unit/bar.test.js
        
        > The agent MUST NOT access secrets or data not explicitly listed above.
    validations:
      required: true
      
  - type: textarea
    id: acceptance-criteria
    attributes:
      label: Acceptance Criteria
      description: How will you know this task is complete?
      placeholder: |
        - [ ] Feature implemented according to spec
        - [ ] Tests pass
        - [ ] Documentation updated
        - [ ] No security issues introduced
    validations:
      required: true
      
  - type: checkboxes
    id: safety-checklist
    attributes:
      label: Safety checklist (must be completed by the reviewer)
      description: These checks must be completed before merging any agent-generated work
      options:
        - label: "Scope verified: agent touched only the allowed files/paths"
        - label: "No secrets or sensitive data were exposed to the agent"
        - label: "Tests run locally and CI passes"
        - label: "Linting and security scans acceptable"  
        - label: "PR author/commits include the agent marker `[agent-generated]`"
        - label: "Reviewer added `agent: approved` label or left an approved review"
        
  - type: markdown
    attributes:
      value: |
        ## Labels (recommended)
        - `agent: allowed` — opt-in label to permit an agent run
        - `agent: generated` — applied by the workflow to PRs it creates
        - `agent: approved` — applied by a human reviewer after inspection
        - `agent: denied` — blocks automated agent action for this issue
        
        ## Branch & PR conventions
        - Branch name format: `agent/<issue-number>-short-slug` (e.g. `agent/123-add-tests`)
        - Agent-created commits must include `[agent-generated]` in the commit message.
        - Agent-created PRs must:
          - Be opened as Draft
          - Contain `AUTOGENERATED-BY-AGENT: true` in the PR body
          - Be labeled `agent: generated`
        
        ## Human review & merge gating
        - A human must inspect and explicitly approve the PR before merge.
          - Approval may be an "Approve" review from a maintainer or adding the label `agent: approved`.
        - Branch protection and CI must pass (tests, linters, SCA) before merging.
        
        ## How to request an agent run (for maintainers)
        1. Add `agent: allowed` to this issue (or run the `Agent: run on opt-in sub-issue` workflow manually).
        2. Wait for the workflow to create a draft PR with agent changes.
        3. Inspect the draft PR, run tests, and if acceptable mark with `agent: approved` or approve the PR.
        
        ## Notes
        - Keep agent runs small and auditable. Prefer many small sub-issues over large ones.
        - If you suspect a problem with the agent, remove `agent: allowed`, revoke the bot token, and notify maintainers.